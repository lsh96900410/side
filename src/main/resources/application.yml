spring:
  datasource:
    url: ${{ secrets.RDS_URL }}
    username: ${{ secrets.RDS_USERNAME }}
    password: ${{ secrets.RDS_PASSWORD }}

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${{ secrets.GOOGLE_ID }}
            client-secret: ${{ secrets.GOOGLE_SECRET }}
            redirect-uri: https://ec2-13-125-253-61.ap-northeast-2.compute.amazonaws.com:8080/login/oauth2/code/google
            scope:
              - email
              - profile

          naver:
            client-id: ${{ secrets.NAVER_ID }}
            client-secret: ${{ secrets.NAVER_SECRET }}
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원정보를 json 형식으로 받음. response 라는 키 값으로 네이버가 리턴해줌

logging:
  level:
    org.hibernate.SQL: info
    org.hibernate.type: trace

